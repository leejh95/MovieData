<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="movie">

	<!-- 회원 로그인 -->
	<select id="sign_in" resultType="mybatis.vo.MovieMemberVO" parameterType="java.util.Map">
		select * from Movie_Mem where id = #{id} and pw = #{pw} and status = 0 or status = 2 and id is not null
	</select>
	
	<!-- sns 로그인 -->
	<select id="sign_in_sns" resultType="mybatis.vo.MovieMemberVO" parameterType="java.util.Map">
		select * from Movie_Mem where sns_id = #{sns_id} and sns_type = #{sns_type} and status = 0
	</select>

	<!-- 회원 가입 -->
	<insert id="sign_up" parameterType="mybatis.vo.MovieMemberVO">
		insert into Movie_Mem(m_idx <if test="id != null">, id</if> <if test="pw != null">, pw</if>, name, email <if test="phone != null">, phone</if>, reg_date, status <if test="sns_id != null">, sns_id</if> <if test="sns_type != null">, sns_type</if>)
		values(Movie_Mem_seq.nextval <if test="id != null">, #{id}</if> <if test="pw != null">, #{pw}</if>, #{name}, #{email} <if test="phone != null">, #{phone}</if>, sysdate, 0 <if test="sns_id != null">, #{sns_id}</if> <if test="sns_type != null">, #{sns_type}</if>)
	</insert>
	
	<!-- 페이징 기법에 사용될 전체 게시물의 수를 반환하는 기능 -->
	<select id="totalCount" resultType="int" parameterType="String">
		select count(*) from movie_board where category = #{category} and status = 0 or status = 2
	</select>
	
	<!-- 페이징 기법에 사용될 영화 포스트의 댓글 수를 반환하는 기능 -->
	<select id="totalPostCommCount" resultType="int" parameterType="String">
		select count(*) from Movie_Comm where movieCd = #{movieCd} and status = 0
	</select>
	
	<!-- 페이징 기법에 사용될 게시물의 댓글 수를 반환하는 기능 -->
	<select id="totalBoardCommCount" resultType="int" parameterType="String">
		select count(*) from Movie_Comm where b_idx = #{b_idx} and status = 0
	</select>
	
	<!-- 페이징 기법에 사용될 전체 회원 수를 반환하는 기능 -->
	<select id="totalMemberCount" resultType="int">
		select count(*) from Movie_Mem where status != 2
	</select>
	
	<!-- 원글 쓰기 기능 -->
	<insert id="writeBoard" parameterType="mybatis.vo.MovieBoardVO">
		insert into movie_board(b_idx, subject, content, file_name, ori_name, write_date, ip, hit, ref, step, sunbun, status, category, m_idx)
		values(movie_board_seq.nextval, #{subject}, #{content}, #{file_name}, #{ori_name}, sysdate, #{ip}, 0, movie_board_ref.nextval, 0, 0, 0, #{category}, #{m_idx})
	</insert>
	
	<!-- 답변 쓰기시 먼저 sunbun을 1씩 증가하는 기능 (참조글의 ref값이 같고, 참조글의 sunbun값 보다 더 큰 게시물들의 sunbun값을 1씩 증가) -->
	<update id="updateSunbun" parameterType="java.util.Map">
		update movie_board set sunbun = sunbun + 1 where ref = #{ref} and sunbun &gt; #{sunbun}
	</update>
	
	<!-- 답변 쓰기 기능 -->
	<insert id="writeAnswer" parameterType="mybatis.vo.MovieBoardVO">
		INSERT INTO movie_board(b_idx, subject, content, file_name, ori_name, write_date, ip, hit, ref, step, sunbun, status, category, m_idx) 
		values(movie_board_seq.NEXTVAL, #{subject}, #{content}, #{file_name}, #{ori_name}, sysdate, #{ip}, 0, #{ref}, #{step}, #{sunbun}, 0, #{category}, #{m_idx})
	</insert>
	
	<!-- 댓글 쓰기 기능 -->
	<insert id="writeComment" parameterType="mybatis.vo.MovieCommentVO">
		insert into Movie_Comm(c_idx, content, write_date, ip, status <if test="movieCd != null">, movieCd </if> <if test="m_idx != null">, m_idx </if> <if test="rate != null">, rate </if> <if test="b_idx != null">, b_idx </if>) 
		values(Movie_Comm_seq.nextval, #{content}, sysdate, #{ip}, 0 <if test="movieCd != null">, #{movieCd} </if> <if test="m_idx != null">, #{m_idx} </if> <if test="rate != null">, #{rate} </if> <if test="b_idx != null">, #{b_idx} </if> )
	</insert>
	
	<!-- 회원 목록 보기 기능 -->
	<select id="getMemberList" resultType="mybatis.vo.MovieMemberVO" parameterType="java.util.Map">
		select * from(
			select rownum as r_num, a.* from
			(select * from Movie_Mem where status != 2) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<!-- 하나의 영화 포스트 또는 하나의 게시물에 대한 댓글 모음 -->
	<!-- 시작 -->
	<select id="postCommList" resultMap="map1" parameterType="java.util.Map">
		select * from(
			select rownum as r_num, a.* from
			(select * from Movie_Comm where movieCd = #{movieCd} and status = 0 order by c_idx desc) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<select id="boardCommList" resultMap="map1" parameterType="java.util.Map">
		select * from(
			select rownum as r_num, a.* from
			(select * from Movie_Comm where b_idx = #{b_idx} and status = 0 order by c_idx desc) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<resultMap type="mybatis.vo.MovieCommentVO" id="map1">
		<result column="m_idx" property="m_idx"/>
		<association property="mvo" javaType="mybatis.vo.MovieMemberVO" select="commList_getMvo" column="m_idx"/>
	</resultMap>
	
	<select id="commList_getMvo" resultType="mybatis.vo.MovieMemberVO" parameterType="String">
		select * from Movie_Mem where m_idx = #{m_idx} 
	</select>
	<!-- 끝 -->
	
	<!-- 회원정보 보기 -->
	<!-- 시작 -->
	<select id="getMember" resultMap="map2" parameterType="String">
		select * from Movie_Mem where m_idx = #{m_idx} 
	</select>
	
	<resultMap type="mybatis.vo.MovieMemberVO" id="map2">
		<id column="m_idx" property="m_idx"/>
		<collection property="c_list" ofType="mybatis.vo.MovieCommentVO" select="getMember_commList" column="m_idx"/>
	</resultMap>
	
	<select id="getMember_commList" resultType="mybatis.vo.MovieCommentVO" parameterType="String">
		select * from Movie_Comm where m_idx = #{m_idx} and status = 0 order by c_idx asc
	</select>
	<!-- 끝 -->
	
	<!-- 관리자 회원 검색 기능 -->
	<select id="searchMember" resultType="mybatis.vo.MovieMemberVO" parameterType="java.util.Map">
		select * from(
			select rownum as r_num, a.* from
			(select * from Movie_Mem  

		<if test="searchType != null and searchValue != null">
	 		<trim prefix="where">
	 			<choose>
	 				<when test="searchType == 0"> <!-- 이름검색 -->
	 					LOWER(name) LIKE LOWER('%' || #{searchValue} || '%')
	 				</when>
	 				<when test="searchType == 1"> <!-- 아이디검색 -->
	 					id LIKE '%' || #{searchValue} || '%'
	 				</when>
	 			</choose>
	 			and status != 2
	 		</trim>
		</if>
		
		) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<!-- 관리자 회원 검색한 결과의 수 반환 -->
	<select id="searchMemberCount" resultType="int" parameterType="java.util.Map">
		select count(*) from Movie_Mem  
		<if test="searchType != null and searchValue != null">
	 		<trim prefix="where">
	 			<choose>
	 				<when test="searchType == 0"> <!-- 이름검색 -->
	 					LOWER(name) LIKE LOWER('%' || #{searchValue} || '%')
	 				</when>
	 				<when test="searchType == 1"> <!-- 아이디검색 -->
	 					id LIKE '%' || #{searchValue} || '%'
	 				</when>
	 			</choose>	
	 		</trim>
		</if>
	</select>
	
	<!-- 해당 페이지마다 보여질 게시물 목록 -->
	<!-- 시작 -->
	<select id="getBoardList" resultMap="map3" parameterType="java.util.Map">
		select * from(
			select rownum as r_num, a.* from
			(select * from movie_board where category = #{category} and status = 0 or status = 2 order by ref desc, sunbun asc) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<resultMap type="mybatis.vo.MovieBoardVO" id="map3">
		<result column="m_idx" property="m_idx"/>
		<association property="mvo" javaType="mybatis.vo.MovieMemberVO" select="getMember" column="m_idx"/>
	</resultMap>
	<!-- 끝 -->
	
	<!-- 게시물 하나 보기 -->
	<select id="getBoard" parameterType="String" resultMap="map3">
		select * from movie_board where b_idx = #{b_idx}
	</select>
	
	<!-- 게시물 수정 -->
	<update id="editPost" parameterType="mybatis.vo.MovieBoardVO">
		update movie_board
		<set>
			write_date = sysdate,
			<trim suffixOverrides=",">
				<if test="subject != null">
					subject = #{subject},
				</if>
				<if test="file_name != null">
					file_name = #{file_name},
				</if>
				<if test="ori_name != null">
					ori_name = #{ori_name},
				</if>
				<if test="content != null">
					content = #{content},
				</if>
				<if test="ip != null">
					ip = #{ip},
				</if>
				<if test="category != null">
					category = #{category},
				</if>
			</trim>
		</set>
		where b_idx = #{b_idx}
	</update>
	
	<!-- 원글 삭제 기능 -->
	<update id="delBoard" parameterType="String">
		update movie_board set status = 1 where b_idx = #{b_idx}
	</update>
	
	<!-- 답글이거나 답글이 달린 경우 삭제 기능 -->
	<update id="delBoard2" parameterType="java.util.Map">
		update movie_board set status = 2 where b_idx = #{b_idx}
	</update>
	
	<!-- 답글이 달렸는지 알 수 있는 개수를 반환하는 기능 -->
	<select id="getRefCount" parameterType="String" resultType="int">
		select count(*) from movie_board where ref = #{ref}
	</select>
	
	<!-- 회원 가입시 아이디 일치 -->
	<select id="searchID" resultType="String" parameterType="String">
		select id from Movie_Mem where id = #{id}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="mybatis.vo.MovieMemberVO">
		update Movie_Mem
		<set>
			<trim suffixOverrides=",">
				<if test="pw != null">
					pw = #{pw},
				</if>
				<if test="name != null">
					name = #{name},
				</if>
				<if test="email != null">
					email = #{email},
				</if>
				<if test="phone != null">
					phone = #{phone},
				</if>
			</trim>
		</set>
		where m_idx = #{m_idx}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="delMember" parameterType="java.util.Map">
		update Movie_Mem set status = 1 where m_idx = #{m_idx} and pw = #{pw}
	</update>
	
	<!-- 회원 복구 -->
	<update id="restoreMember" parameterType="String">
		update Movie_Mem set status = 0 where m_idx = #{m_idx}
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="delComment" parameterType="String">
		update Movie_Comm set status = 1 where c_idx = #{c_idx}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="mybatis.vo.MovieCommentVO">
		update Movie_Comm 
		<set>
			write_date = sysdate,
			<trim suffixOverrides=",">
				<if test="content != null">
					content = #{content},
				</if>
				<if test="ip != null">
					ip = #{ip},
				</if>
				<if test="rate != null">
					rate = #{rate}
				</if>
			</trim>
		</set>
		where c_idx = #{c_idx} 
	</update>
	
	<!-- 영화 별점 평균 -->
	<select id="rateAvg" parameterType="String" resultType="String">
		Select AVG(RATE)
		From MOVIE_COMM
		Where MOVIECD = #{movieCd}
	</select>
	
	<!-- 조회수를 올려주는 기능 -->
	<update id="hit" parameterType="String">
		update movie_board set hit = hit+1 where b_idx = #{b_idx}
	</update>
	
</mapper>